# Build stage
FROM node:20.19.0-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY turbo.json ./
COPY apps/*/package*.json ./apps/
COPY packages/*/package*.json ./packages/

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Install dependencies for each workspace (needed for TypeScript types and Next.js)
WORKDIR /app/apps/backend
RUN npm install
RUN ls -la node_modules/@types/ || echo "No @types directory found"

WORKDIR /app/apps/web
RUN npm install

# Install CLI tools globally for the build
WORKDIR /app
RUN npm install -g turbo @nestjs/cli next typescript

# Debug: Check what's in the backend directory before build
WORKDIR /app/apps/backend
RUN echo "=== Backend directory contents ===" && ls -la
RUN echo "=== Backend node_modules/@types ===" && ls -la node_modules/@types/ || echo "No @types directory"
RUN echo "=== Backend tsconfig.json ===" && cat tsconfig.json

# Build the application (excluding media-service which has its own Docker setup)
WORKDIR /app
RUN turbo run build --filter='!media-service'

# Production stage
FROM node:20.19.0-alpine AS production

WORKDIR /app

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Change ownership
RUN chown -R nextjs:nodejs /app
USER nextjs

# Expose port
EXPOSE 5001

# Start the application
CMD ["npm", "start"] 